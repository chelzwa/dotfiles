<snippet>
  <content><![CDATA[
// Modules
import React from 'react';
import { connect } from 'react-redux';

// Actions

// Components


// Component
class ${1:ClassName} extends React.Component {
  static propTypes = {
  };

  constructor() {
    super();
  }

  componentWillMount() {
    registerOnURLChange(${8:/* Probably a get data */});
    showFilters([${9:/* Array of string filter names */}]);
  }

  render() {
    const { ${4:list}, ${6:resource}, count } = this.props;

    return (
      <Page>
        <PageHeader>
          <h1>${10:New Page}</h1>
          <Actions>
            ${11:Some actions}
          </Actions>
        </PageHeader>
        <PageContent
          fetching={${6:resource}.fetching}
          emptyText={<Card>No ${4:list}</Card>}
          showEmptyText={!${6:resource}.fetching && _.isEmpty(${4:list})}
        >
          <Pager count={count} />
        </PageContent>
      </Page>
    );
  }
}


// Internal methods
function mapStateToProps(state) {
  return {
    ${4:list}: state.resources.${7:resourceInStore}.find,
    ${6:resource}: state.resources.${7:resourceInStore},
    count: state.resources.${7:resourceInStore}.count,
  };
}


// Exports
export default connect(mapStateToProps)(${1:ClassName});

]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>list-page</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>source.js</scope>
</snippet>
